<program> = { <funcDecl> }

<IDENTIFIER> = /[a-z][a-z0-9_]*/i

<intLiteral> = /0|[1-9][0-9]+/
<doubleLiteral> = <intLiteral> "." /[0-9]*[1-9]/
<stringLiteral> = /"(?:[^"\\]|\\.)*"/s
<boolLiteral> = "true" | "false"
<anyLiteral> = <intLiteral> | <doubleLiteral> | <stringLiteral> | <boolLiteral>

<scalarType> = "int" | "double" | "bool"
<varType> = <scalarType> | <scalarType> "[]" | "string"
<returnType> = <varType> | "void"

<expressionStatement> = <boolExpression> ";"
<assignmentStatement> = <boolExpression> "=" <boolExpression> ";"
<returnStatement> = "return" [ <boolExpression> ] ";"

<statement> = <ifStatement> | <whileStatement> |
              <returnStatement> | <assignmentStatement> | 
              <expressionStatement>

<var> = <IDENTIFIER> [ "[" <expression> "]" ]
<boolExpression> = <boolTerm> { "||" <boolTerm> }
<boolTerm> = <boolNotFactor> { "&&" <boolNotFactor> }
<boolNotFactor> = [ "!" ] <boolRelation>
<boolRelation> = <binExpression> [ ("==" | "!=" | "<=" | ">=" | "<" | ">") <binExpression> ]
<binExpression> = <binTerm> { ("|" | "^") <binTerm> }
<binTerm> = <binNotFactor> { "&" <binNotFactor> }
<binNotFactor> = [ "~" ] <expression>
<expression> = <term> { ("+" | "-") <term> }
<term> = <signedFactor> { ("*" | "/") <signedFactor> }
<signedFactor> = [ "-" ] <unsignedFactor>
<unsignedFactor> = "(" <boolExpression> ")" | <anyLiteral> | <var> | <funcCall>

<funcParamList> = <boolExpression> { "," <boolExpression> }
<funcCall> = <IDENTIFIER> "(" [ <funcParamList> ] ")"

<block> = "{" { <statement> } "}"

<funcParamDecl> = <IDENTIFIER> ":" <varType>
<funcParamDeclList> = <funcParamDecl> { "," <funcParamDecl> }
<varDecl> = "var" <funcParamDeclList> ";"
<funcBlock> = "{" [ <varDecl> ] { <statement> } "}"
<funcDecl> = "function" <IDENTIFIER> "(" <funcParamDeclList> ")" ":" <returnType> <funcBlock>

<ifStatement> = "if" "(" <boolExpression> ")" <block> [ "else" <block> ]
<whileStatement> = "while" "(" <boolExpression> ")" <block>